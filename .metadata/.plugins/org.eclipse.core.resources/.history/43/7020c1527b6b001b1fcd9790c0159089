/**
 * generated by Xtext 2.14.0
 */
package polytech.spaceteam.cineditor.generator;

import java.util.ArrayList;
import java.util.List;

import javax.inject.Inject;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import org.eclipse.xtext.naming.IQualifiedNameProvider;
import org.eclipse.xtext.naming.QualifiedName;
import org.eclipse.xtext.xbase.lib.Extension;
import org.eclipse.xtext.xbase.lib.IteratorExtensions;

import com.google.common.collect.Iterables;

import CinEditorML.Layer;
import CinEditorML.Movie;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class CinEditorGenerator extends AbstractGenerator {
	
	final String varMovieHeight = "movie_height";
	final String varMovieWidth = "movie_width";
	final List<String> elementsVarNames = new ArrayList<>();
	
	@Inject
	@Extension
	private IQualifiedNameProvider _iQualifiedNameProvider;
	
	@Override
	public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
		Iterable<Movie> _filter = Iterables.<Movie>filter(IteratorExtensions.<EObject>toIterable(resource.getAllContents()), Movie.class);
	    for (final Movie movie : _filter) {
	      QualifiedName _fullyQualifiedName = this._iQualifiedNameProvider.getFullyQualifiedName(movie);
	      String _plus = (_fullyQualifiedName + ".py");
	      fsa.generateFile(_plus, this.compile(movie));
	    }
	}
	
	private String compile(final Movie movie) {
		String movieString = loadImports();
		movieString += extractMovieSize(movie);
		movieString += extractLayers(movie.getLayers());
		return movieString;
	}
	
	private String extractLayers(List<Layer> layers) {
		String s = "le python c rigolo";
		
		return s;
	}

	private String extractMovieSize(Movie movie) {
		String s = varMovieHeight + " = " + movie.getDimension().getHeight() + "\n";
		s += varMovieWidth + " = " + movie.getDimension().getWidth() + "\n";
		return s;
	}
	
	private String loadImports() {
		String s = "from moviepy.editor import *\n";
		s += "\n";
		return s;
	}
}

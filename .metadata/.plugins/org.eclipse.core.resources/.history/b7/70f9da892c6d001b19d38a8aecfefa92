// automatically generated by Xtext
grammar polytech.spaceteam.cineditor.CinEditor with org.eclipse.xtext.common.Terminals

import "http://www.example.org/CinEditorML" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Movie returns Movie:
	'Movie'	name=EString dimension=Dimension ('fps' fps=EInt)?
		layers+=Layer+;

Element returns Element:
	GraphicalElement | FadeIn | FadeOut | Translate | AudioElement;

Layer returns Layer:
	{Layer}
	'Layer'
		elements+=Element+;

EString returns ecore::EString:
	STRING | ID;

Position returns Position:
		'position' ('(' x=ItemPosition ',' y=ItemPosition ')');
		
ItemPosition returns ItemPosition:
	ItemPositionInt | ItemPositionString;

ItemPositionInt  returns ItemPositionInt:
	position=EInt;
	
ItemPositionString  returns ItemPositionString:
	position=('center' | 'left' | 'right' | 'bottom' | 'top');

Dimension returns Dimension:
		'dimension' width=EInt 'x' height=EInt;
		
HexadecimalColor returns HexadecimalColor:
		'color' hexadecimalValue=EString;
		
GraphicalElement returns GraphicalElement:
	Text | Video | Picture | Rectangle;

EInt returns ecore::EInt:
	'-'? INT;

EFloat returns ecore::EFloat:
	EFloat;


AudioElement returns AudioElement:
	'Audio' name=EString '=' url=EString ('volume' volume=) ('at' beginTime=EInt)? ('during' duration=EInt)? 'on' element=[GraphicalElement];

Text returns Text:
	'Text' name=EString '=' text=EString ('fontSize' fontSize=EInt)? position=Position? ('at' beginTime=EInt)? ('during' duration=EInt)? color=HexadecimalColor;

Picture returns Picture:
	'Picture' name=EString '=' url=EString position=Position? dimension=Dimension? ('at' beginTime=EInt)? ('during' duration=EInt)?;

Video returns Video:
	'Video' name=EString '=' url=EString 'from' beginCropTime=EInt position=Position? dimension=Dimension? ('at'  beginTime=EInt)? ('during' duration=EInt)?;
	
Rectangle returns Rectangle:
	'Rectangle' name=EString '=' color=HexadecimalColor position=Position? dimension=Dimension? ('at' beginTime=EInt)? ('during' duration=EInt)?;

FadeIn returns FadeIn:
	'Effect' name=EString '=' 'FadeIn' 'during' duration=EInt 'on' element=[GraphicalElement];

FadeOut returns FadeOut:
	'Effect' name=EString '=' 'FadeOut' 'during' duration=EInt 'on' element=[GraphicalElement];

Translate returns Translate:
	'Effect' name=EString '=' 'Translate' positionToTranslate=Position ('at' beginTime=EInt)? ('during' duration=EInt)? 'on' element=[GraphicalElement];
	
